name: Build and test
on: [pull_request]

jobs:
  cancel-previous:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
  build-install:
    name: Install dependencies and build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Setup app dependencies
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm i
      - name: Init Lerna
        run: npm run init
      # - name: Generate keys
      #   run: npm run keys:generate
      - name: Build project
        run: npm run build
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
  # audit:
  #  name: Audit package dependencies
  #  runs-on: ubuntu-latest
  #  needs: [build-install]
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Setup app dependencies
  #      uses: actions/setup-node@v1
  #      with:
  #        node-version: ${{ needs.build-install.outputs.matrix.node-version }}
  #    - name: Audit package dependencies
  #      run: npm audit --audit-level=critical
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [build-install]
    # env:

    steps:
      - uses: actions/checkout@v2
      - name: Setup app dependencies
        uses: actions/setup-node@v1
        with:
          node-version: ${{ needs.build-install.outputs.matrix.node-version }}
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      # - name: Start containers
      #   run: docker-compose up -d --build

      - name: Run unit tests
        run: npm run test
        env:
          CI: true
      # - name: Stop containers
      #   if: always()
      #   run: docker-compose down -v
  # test-e2e:
  #   name: Run E2E tests
  #   runs-on: ubuntu-latest
  #   needs: [build-install]
  #   env:
  #     NODE_ENV: test


  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup app dependencies
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ needs.build-install.outputs.matrix.node-version }}
  #     - uses: actions/cache@v2
  #       id: restore-build
  #       with:
  #         path: ./*
  #         key: ${{ github.sha }}
  #     - name: Start containers
  #       run: docker-compose up -d --build
  #     - name: Run E2E tests
  #       run: npm run test:e2e
  #     - name: Stop containers
  #       if: always()
  #       run: docker-compose down -v
